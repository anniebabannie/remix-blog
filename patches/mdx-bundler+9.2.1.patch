diff --git a/node_modules/mdx-bundler/dist/client.js b/node_modules/mdx-bundler/dist/client.js
index 3a198e3..6b04024 100644
--- a/node_modules/mdx-bundler/dist/client.js
+++ b/node_modules/mdx-bundler/dist/client.js
@@ -5,9 +5,12 @@ Object.defineProperty(exports, "__esModule", {
 });
 exports.getMDXComponent = getMDXComponent;
 exports.getMDXExport = getMDXExport;
-var React = _interopRequireWildcard(require("react"));
-var _jsx_runtime = _interopRequireWildcard(require("react/jsx-runtime"));
-var ReactDOM = _interopRequireWildcard(require("react-dom"));
+var react = import("react");
+var reactJsxRuntime = import("react/jsx-runtime");
+var reactDom = import("react-dom");
+var React = _interopRequireWildcard(react);
+var _jsx_runtime = _interopRequireWildcard(reactJsxRuntime);
+var ReactDOM = _interopRequireWildcard(reactDom);
 function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
 function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
 /**
